{{>layout/compheader}}

<!-- 메인 -->
<!-- 각자 페이지 main 클래스에 name 작성-->
<!-- main 클래스에 background-color를 넣을거면 class="common_bg" 넣어주기 -->
<main class="emp_info main_page">
  <div class="container">
    <!-- container 건들지 말기 -->
    <!-- 여기서부터 시작 -->
    <div class="position_box">
      <div class="position_tab">
        <ul class="position_category" id="position">
          <li>
            <button class="skill_box" onclick="handleAllClick()">전체</button>
          </li>
          {{#positionList}}
          <li>
            <button class="selected_box" data-id="{{id}}" onclick="handlePositionClick(this)">{{position}}</button>
          </li>
          {{/positionList}}
        </ul>
      </div>
      <ul class="position_menu">
        {{#skillList}}
        <li class="position_skill com_skill">
          <a href="#" class="skill_box" onclick="handleSkillClick('{{id}}')">{{skill}}</a>
        </li>
        {{/skillList}}
      </ul>
    </div>



    <div class="position_select">
      <select class="select select_edu" id="career">
        <option disabled selected>경력</option>
        <option value="신입">신입</option>
        <option value="경력 1년차">1년차</option>
        <option value="경력 2년차">2년차</option>
        <option value="경력 3년차">3년차</option>
        <option value="경력 4년차">4년차</option>
        <option value="경력 5년차">5년차</option>
      </select>

      <select class="select select_adr" id="location">
        <option disabled selected>지역</option>
        <option value="전국">전국</option>
        <option value="서울">서울</option>
        <option value="경기">경기</option>
        <option value="인천">인천</option>
        <option value="부산">부산</option>
        <option value="대구">대구</option>
        <option value="광주">광주</option>
        <option value="대전">대전</option>
        <option value="울산">울산</option>
        <option value="세종">세종</option>
        <option value="충북">충북</option>
        <option value="충남">충남</option>
        <option value="전북">전북</option>
        <option value="전남">전남</option>
        <option value="경북">경북</option>
        <option value="경남">경남</option>
        <option value="제주">제주</option>
      </select>
    </div>
    <div class="main_box" id="position-box">

    </div>
  </div>


  <script>


    ////////////////////////////////////////////////////////////////////////////

    //제일 첫 화면
    render1();

    function handleAllClick() {
      render1();
    }

    async function render1() {
      $("#position-box").html('');
      let responseBody = await download1();
      responseBody.forEach((jobOpening) => {
        $("#position-box").append(jobOpeningBox(jobOpening));
      });
    }


    // 포지션&기술별 함수 1
    function handlePositionClick(positionId) {
      render2(positionId, null);
      console.log("positionId", positionId);
    }
    function handleSkillClick(skillId) {
      render2(null, skillId);
      console.log("skillId", skillId);
    }

    // 포지션&기술별 함수 2
    async function render2(positionId, skillId) {
      $("#position-box").html('');
      let responseBody = await download2(positionId, skillId);
      responseBody.forEach((jobOpening) => {
        $("#position-box").append(jobOpeningBox(jobOpening));
      });
    }

    // 경력&지역별 함수 1
    $("#career, #location").change(async function () {
      let careerValue = $("#career").val(); // $(this)를 사용하여 현재 선택한 요소를 참조합니다.
      let locationValue = $("#location").val();

      console.log(careerValue);
      console.log(locationValue);

      if ((careerValue !== null) && (locationValue !== "전국" && locationValue != null)) {
        await render3(careerValue, locationValue);
        console.log(careerValue);
      } else if (careerValue !== null && locationValue === null) {
        await render3(careerValue, "");
        console.log("요요요요요");
      } else if (locationValue && locationValue !== "전국") {
        await render3("", locationValue);
      } else if (careerValue === null && locationValue === "전국") {
        await render3("", "");
        console.log("이거디");
      } else if (careerValue !== null && locationValue === "전국") {
        locationValue = "";
        await render3(careerValue, locationValue);
        console.log("야 이거디")
      }
    });

    // 경력&지역별 함수 2
    async function render3(career, location) {
      $("#position-box").html('');
      let responseBody = await download3(career, location);
      responseBody.forEach((jobOpening) => {
        $("#position-box").append(jobOpeningBox(jobOpening));
      });
    }

    // 3. 컴퍼넌트
    function jobOpeningBox(jobOpening) {
      return `
        <li class="comp_item">
          <a href="/user/jobOpening/${jobOpening.jobOpeningId}">
            <ul class="comp_cont">
              <li class="comp_img">
                <img src="/image/company_img/comp_img01.png" alt="기업01">
              </li>
              <li class="com_name">
                ${jobOpening.compName}
              </li>
              <li class="com_tit">
                <h4>${jobOpening.title}</h4>
              </li>
              <li class="com_txt">
                <p>${jobOpening.skill}</p>
              </li>
              <li class="com_etc">
                <span class="com_adr">
                  <p class="compaddress">${jobOpening.compAddress}</p>
                  <p>|</p>
                </span>
                <span class="com_car">
                  <p class="career">${jobOpening.career}</p>
                </span>
              </li>
            </ul>
          </a>
        </li>`;
    }

    // 메인 또는 전체보기
    async function download1() {
      let response = await fetch(`/api/jobOpening/select/all`);
      let responseBody = await response.json();
      console.log(responseBody);
      return responseBody;
    }

    // 포지션&기술별 채용공고 통신코드
    async function download2(positionId, skillId) {
      console.log('positionId', positionId);
      console.log('skillId', skillId);

      let url = `/api/jobOpening/select/pk`;
      if (positionId == null) {
        url += `?skillId=${skillId}`;
      } else if (skillId == null) {
        url += `?positionId=${positionId}`;
      } else if (positionId != null && skillId != null) {
        url += `?positionId=${positionId}&skillId=${skillId}`;
      }
      let response = await fetch(url);
      let responseBody = await response.json();
      console.log(responseBody);
      return responseBody;
    }

    // 경력&지역별 채용공고 통신코드
    async function download3(career, location) {
      let response = await fetch(`/api/jobOpening/select/cl?career=${career}&location=${location}`);
      console.log(response);
      let responseBody = await response.json();
      return responseBody;
    }
  </script>

</main>
<!-- 메인 -->

{{>layout/footer}}